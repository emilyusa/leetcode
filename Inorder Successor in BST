https://leetcode.com/problems/inorder-successor-in-bst/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* inorderSuccessor(TreeNode* root, TreeNode* p) {
        TreeNode* pre = NULL;
        while (root) {
            if (root->val > p->val) {
                pre = root;
                root = root->left;
            } else {
                root = root->right;
            }
        }
         return pre;
    }
};

https://leetcode.com/problems/binary-tree-inorder-traversal/submissions/
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        if (!root) return {};
        vector<int> res;
        helper(root, res);
        return res;
    }
    
    void helper(TreeNode* root, vector<int> & res) {
        if(!root) return;
        helper(root->left, res);
        res.push_back(root->val);
        helper(root->right, res);
    }
};
